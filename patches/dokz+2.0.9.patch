diff --git a/node_modules/dokz/dist/components/FloatingTableOfContents.js b/node_modules/dokz/dist/components/FloatingTableOfContents.js
index 95405f6..ead5cc7 100644
--- a/node_modules/dokz/dist/components/FloatingTableOfContents.js
+++ b/node_modules/dokz/dist/components/FloatingTableOfContents.js
@@ -50,6 +50,7 @@ var react_2 = __importStar(require("react"));
 var pick_1 = __importDefault(require("lodash/pick"));
 var parse_github_url_1 = __importDefault(require("parse-github-url"));
 var provider_1 = require("../provider");
+var keyCounter = 0;
 function FloatingTableOfContents(_a) {
     var table = _a.table, rest = __rest(_a, ["table"]);
     var _b = provider_1.useDokzConfig(), branch = _b.branch, githubUrl = _b.githubUrl;
@@ -77,7 +78,7 @@ function FloatingTableOfContents(_a) {
             react_2.default.createElement(react_1.Button, { fontWeight: '600', variant: 'solid' }, "Edit This Page"))),
         table.children &&
             table.children.map(function (table) {
-                return react_2.default.createElement(TableItem, __assign({ key: table.slug }, table));
+                return react_2.default.createElement(TableItem, __assign({ key: table.slug || 'key-' + ++keyCounter }, table));
             })));
 }
 exports.FloatingTableOfContents = FloatingTableOfContents;
@@ -89,7 +90,7 @@ function TableItem(_a) {
             react_2.default.createElement(react_1.Link, { href: slug }, title)),
         react_2.default.createElement(react_1.Stack, { ml: baseW * depth + 'px' }, children &&
             children.map(function (table) {
-                return react_2.default.createElement(TableItem, __assign({ key: table.slug }, table));
+                return react_2.default.createElement(TableItem, __assign({ key: table.slug || 'key-' + ++keyCounter }, table));
             }))));
 }
 function makeGithubEditUrl(_a) {
diff --git a/node_modules/dokz/dist/components/Playground.js b/node_modules/dokz/dist/components/Playground.js
index c052028..7d09f8e 100644
--- a/node_modules/dokz/dist/components/Playground.js
+++ b/node_modules/dokz/dist/components/Playground.js
@@ -62,6 +62,7 @@ var provider_1 = require("../provider");
 var Code_1 = require("./Code");
 var react_3 = require("@mdx-js/react");
 var support_1 = require("./support");
+var ThemeProvider = require('@eduzz/houston-ui/ThemeProvider');
 exports.Playground = function (_a) {
     var className = _a.className, _b = _a.children, children = _b === void 0 ? null : _b, code = _a.code, scope = _a.scope, _c = _a.iframe, iframe = _c === void 0 ? false : _c, _d = _a.previewEnabled, previewEnabled = _d === void 0 ? true : _d, rest = __rest(_a, ["className", "children", "code", "scope", "iframe", "previewEnabled"]);
     var prismTheme = provider_1.useDokzConfig().prismTheme;
@@ -78,8 +79,10 @@ exports.Playground = function (_a) {
         theme: prismTheme[colorMode],
         language: language,
         code: editorCode,
-        // transformCode: (code) => '/** @jsx mdx */' + code,
-        scope: __assign(__assign({}, scope), { mdx: react_3.mdx }),
+        transformCode: (code) => {
+            return `<ThemeProvider disableToast disabledFontBase disableCssBaseline><div style={{ padding: 16 }}>${code.startsWith('()') ? `{React.createElement(${code})}` : code}</div></ThemeProvider>`
+        },
+        scope: __assign(__assign({}, scope), { mdx: react_3.mdx, ThemeProvider: ThemeProvider.default }),
     };
     var handleCodeChange = react_2.useCallback(function (newCode) { return setEditorCode(newCode.trim()); }, [setEditorCode]);
     var editorBar = (react_2.default.createElement(react_2.default.Fragment, null,
@@ -89,7 +92,7 @@ exports.Playground = function (_a) {
             react_2.default.createElement(react_1.Button, { transition: 'background 300ms', bg: showCode ? BUTTON_BG : 'transparent', onClick: function () { return setShowCode(true); }, size: 'sm' }, "Code"),
             react_2.default.createElement(Code_1.CopyButton, { hasCopied: hasCopied, style: { strokeWidth: '2px' }, onClick: onCopy })),
         react_2.default.createElement(react_1.Divider, { m: '0' })));
-    var livePreview = (react_2.default.createElement(react_1.Box, { as: react_live_1.LivePreview, fontFamily: 'body', p: '0px', height: 'auto', w: '100%', maxWidth: '100%', overflow: 'hidden' }));
+        var livePreview = (react_2.default.createElement(react_1.Box, { as: react_live_1.LivePreview, fontFamily: 'body', p: '0px', height: 'auto', w: '100%', maxWidth: '100%', overflow: 'hidden' }));
     return (react_2.default.createElement(react_1.Box, __assign({ my: '20px' }, rest),
         react_2.default.createElement(re_resizable_1.Resizable, __assign({}, resizableProps, { handleComponent: { right: react_2.default.createElement(HandleComponent, { height: '100%' }) } }),
             react_2.default.createElement(react_live_1.LiveProvider, __assign({}, liveProviderProps),
diff --git a/node_modules/dokz/dist/plugin/index.js b/node_modules/dokz/dist/plugin/index.js
index 808d06b..43d61d9 100644
--- a/node_modules/dokz/dist/plugin/index.js
+++ b/node_modules/dokz/dist/plugin/index.js
@@ -102,7 +102,7 @@ var writeMdxIndex = throttle_1.default(function () {
     console.log('[ info ]  generating mdx sidebar file');
     return getMdxFilesIndex_1.getMdxFilesIndex()
         .then(function (index) {
-        return fs_1.default.promises.writeFile('sidebar.json', JSON.stringify(index, null, 4));
+        return fs_1.default.promises.writeFile('sidebar.json', JSON.stringify(clean(index), null, 4));
     })
         .catch(function (e) {
         console.error('could not write mdx sidebar file');
@@ -119,3 +119,31 @@ function unique(arr) {
     }
     return a;
 }
+const names ={
+    'ui-components': '@eduzz/houston-ui',
+    'hooks': '@eduzz/houston-hooks',
+    'icons': '@eduzz/houston-icons',
+    'experimental': '@eduzz/houston-experimental',
+    'forms': '@eduzz/houston-forms',
+    'tokens': '@eduzz/houston-tokens',
+    'styles': '@eduzz/houston-styles',
+}
+function clean(node) {
+    if(names[node.name]) node.title = names[node.name];
+
+    if(node.children === undefined) return node;
+    if(node.children.length === 0) return null;
+  
+  
+    node.children = node.children.reduce((acc, node) => {
+      const resultNode = clean(node);
+  
+      if(resultNode) acc.push(resultNode);
+      return acc;
+    }, [])
+  
+    if(node.children.length === 0) return null;
+    if(node.children.length === 1 && !node.title) return node.children[0];
+
+    return node;
+  }
\ No newline at end of file
diff --git a/node_modules/dokz/dist/plugin/rehype/playground.js b/node_modules/dokz/dist/plugin/rehype/playground.js
index f7b9806..de4ccee 100644
--- a/node_modules/dokz/dist/plugin/rehype/playground.js
+++ b/node_modules/dokz/dist/plugin/rehype/playground.js
@@ -26,7 +26,7 @@ var addComponentsProps = function (scopes) { return function (node, idx) {
     var formatted = format_1.formatter(hast_util_to_string_1.default(node));
     var code = formatted.slice(1, Infinity);
     var scope = "{props, " + scopes.join(',') + "}";
-    var child = jsx_1.sanitizeCode(jsx_1.removeTags(code));
+    var child = jsx_1.sanitizeCode(code).replace('<Playground>', '').replace('</Playground>', '').replace(/^\\n/gmi, '').replace(/\\n$/gmi, '').replace(/\\n\s{2}/gmi, '\\n').trim().replace(/^{/gmi, '').replace(/}$/gmi, '').trim()
     var newTag = "<" + name + " __position={" + idx + "} code={'" + child + "'} scope={" + scope + "}";
     // console.log(newTag)
     node.value = node.value.replace(tagOpen, newTag);
diff --git a/node_modules/dokz/esm/components/Playground.js b/node_modules/dokz/esm/components/Playground.js
index 86a74cf..5f1a929 100644
--- a/node_modules/dokz/esm/components/Playground.js
+++ b/node_modules/dokz/esm/components/Playground.js
@@ -37,6 +37,7 @@ import { useDokzConfig } from '../provider';
 import { CopyButton } from './Code';
 import { mdx } from '@mdx-js/react';
 import { CODE_FONT } from './support';
+import ThemeProvider from '@eduzz/houston-ui/ThemeProvider';
 export var Playground = function (_a) {
     var className = _a.className, _b = _a.children, children = _b === void 0 ? null : _b, code = _a.code, scope = _a.scope, _c = _a.iframe, iframe = _c === void 0 ? false : _c, _d = _a.previewEnabled, previewEnabled = _d === void 0 ? true : _d, rest = __rest(_a, ["className", "children", "code", "scope", "iframe", "previewEnabled"]);
     var prismTheme = useDokzConfig().prismTheme;
@@ -53,8 +54,10 @@ export var Playground = function (_a) {
         theme: prismTheme[colorMode],
         language: language,
         code: editorCode,
-        // transformCode: (code) => '/** @jsx mdx */' + code,
-        scope: __assign(__assign({}, scope), { mdx: mdx }),
+        transformCode: (code) => {
+            return `<ThemeProvider disableToast disabledFontBase disableCssBaseline><div style={{ padding: 16 }}>${code.startsWith('()') ? `{React.createElement(${code})}` : code}</div></ThemeProvider>`
+        },
+        scope: __assign(__assign({}, scope), { mdx: mdx, ThemeProvider: ThemeProvider }),
     };
     var handleCodeChange = useCallback(function (newCode) { return setEditorCode(newCode.trim()); }, [setEditorCode]);
     var editorBar = (React.createElement(React.Fragment, null,
