(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8312],{30991:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/usePromisePaginated",function(){return c(29537)}])},29537:function(a,b,c){"use strict";c.r(b),c.d(b,{default:function(){return h},meta:function(){return f}});var d=c(31373);c(27378);var e=c(35318),f={name:"usePromisePaginated",tableOfContents:{depth:0,children:[{depth:1,slug:"#usepromisepaginated",title:"usePromisePaginated",children:[{depth:2,slug:"#como-usar",title:"Como usar"},{depth:2,slug:"#cuidados",title:"Cuidados"},{depth:2,slug:"#par\xe2metros-e-retorno",title:"Par\xe2metros e Retorno"}]}]}},g={meta:f};function h(a){var b=a.components,c=(0,d.Z)(a,["components"]);return(0,e.kt)("wrapper",Object.assign({},g,c,{components:b,mdxType:"MDXLayout"}),(0,e.kt)("h1",Object.assign({},{id:"usepromisepaginated"}),"usePromisePaginated"),(0,e.kt)("p",null,"Hook para facilitar o uso de uma promise paginada, d\xe1 subscribe e retorna\no resultado junto com fun\xe7\xf5es de manipula\xe7\xe3o dos parametros."),(0,e.kt)("h2",Object.assign({},{id:"como-usar"}),"Como usar"),(0,e.kt)("pre",null,(0,e.kt)("code",Object.assign({parentName:"pre"},{className:"language-tsx"}),"const { params, handleChangePage, handleChangePerPage, handleSort, result, total, isLoading } = usePromisePaginated(\n  {\n    initialParams: { page: 1, perPage: 5 }, // optional\n    infinityScroll: false, // optional\n    onChangeParams: params => salesService.list(params)\n  },\n  []\n);\n")),(0,e.kt)("h2",Object.assign({},{id:"cuidados"}),"Cuidados"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("strong",{parentName:"li"},"Erros")," ocorridos ser\xe3o automaticamentes logados se as o ",(0,e.kt)("strong",{parentName:"li"},"onUnhandledError")," no\n",(0,e.kt)("strong",{parentName:"li"},"setHoustonHooksConfig")," for configurado.")),(0,e.kt)("h2",Object.assign({},{id:"par\xe2metros-e-retorno"}),"Par\xe2metros e Retorno"),(0,e.kt)("pre",null,(0,e.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"/**\n * @param options `UsePaginatedOptions`: {\n *  initialParams: Estado inicial dos param\xeatros\n *  infinityScroll: Se os resultados devem ser mergeados, criando uma lista infinita.\n *  onChangeParams: Fun\xe7\xe3o que recebe os param\xeatros e retorna uma Promise\n * }\n * @param deps React deps\n * @returns `UsePaginatedPromise`: {\n *  params: P / Json com os parametros\n *  initialParams: Partial<P> / Json com os parametros iniciais, \xfatil para um reset de filtros\n *  isLoading: boolean; / Se est\xe1 carregando ou n\xe3o\n *  isLoadingMore: boolean; / Se est\xe1 carregando mais ou n\xe3o, \xfatil para o infinityScroll\n *  total: number; / N\xfamero total de linhas retornadas, apenas a requisi\xe7\xe3o da pagina inicial \xe9 necess\xe1rio retornar o total, as outras paginas podem retonar null\n *  result: R[]; / Array com o resultado\n *  hasMore: boolean; / Se existe mais para ser carregado, calculado com base do total, \xfatil para o infinityScroll\n *  error: any; / Error, se aconteceu algum\n *  refresh: () => void; / Fun\xe7\xe3o de refresh\n *  updateInitialParams: React.Dispatch<React.SetStateAction<P>>; / \xdatil para alterar o reset de um filtro\n *  mergeParams: (params: PaginationMergeParams<P>) => void; / Fun\xe7\xe3o para atualizar os paramentros pode ser o valor em s\xed o uma fun\xe7\xe3o que recebe o valor atual\n *  handleChangePage: (page: number) => void; / Fun\xe7\xe3o de atalho para o mergeParams({ page: 1})\n *  handleChangePerPage: (perPage: number) => void; / Fun\xe7\xe3o de atalho para o mergeParams({ perPge: 1})\n *  handleSort: (sortField: string, sortDirection: 'asc' | 'desc') => void; / Fun\xe7\xe3o de atalho para o mergeParams({ sortField, sortDirection })\n * }\n */\nexport default function usePromisePaginated<P extends PaginationParams, R>(options: UsePaginatedOptions<P, R>, , deps: React.DependencyList): UsePaginatedPromise<P, R>\n")))}h.isMDXComponent=!0;var i={editThisPagePath:"src/pages/hooks/usePromisePaginated/index.mdx"};for(var j in i)window[j]=i[j]},31373:function(a,b,c){"use strict";function d(a,b){if(null==a)return{};var c,d,e=function(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],b.indexOf(c)>=0||(e[c]=a[c]);return e}(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(b.indexOf(c)>=0)&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}c.d(b,{Z:function(){return d}})}},function(a){a.O(0,[9774,2888,179],function(){var b;return a(a.s=30991)}),_N_E=a.O()}])